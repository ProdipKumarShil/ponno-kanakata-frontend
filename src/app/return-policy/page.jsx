"use client";

import Header from '@/components/header';
import Footer from '@/components/footer';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { CheckCircle, Clock, CircleDollarSign, Truck, XCircle, LifeBuoy, Link as LinkIcon } from 'lucide-react';
import { useLanguage } from '@/context/language-context';
import { Button } from '@/components/ui/button';
import Link from 'next/link';

export default function ReturnPolicyPage() {
    const { language } = useLanguage();

    const content = {
        bn: {
            title: "‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶™‡¶≤‡¶ø‡¶∏‡¶ø",
            refundableTitle: "‚úÖ ‡¶ï‡ßã‡¶® ‡¶ï‡ßã‡¶® ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶™‡¶£‡ßç‡¶Ø ‡¶´‡ßá‡¶∞‡¶§‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø",
            refundableCases: [
                "‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶ó‡ßç‡¶∞‡¶∏‡ßç‡¶§ ‡¶¨‡¶æ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶™‡¶£‡ßç‡¶Ø (‡¶≠‡¶æ‡¶ô‡¶æ/‡¶´‡¶æ‡¶ü‡¶æ/‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ‡ßü ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá)",
                "‡¶Ö‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø (‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡¶ï‡ßÉ‡¶§ ‡¶™‡¶£‡ßç‡¶Ø ‡¶¨‡¶æ ‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶ï‡¶Æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá)",
                "‡¶≠‡ßÅ‡¶≤ ‡¶™‡¶£‡ßç‡¶Ø ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø (‡¶≠‡ßÅ‡¶≤ ‡¶Ü‡¶ï‡¶æ‡¶∞, ‡¶∞‡¶ô, ‡¶Æ‡¶°‡ßá‡¶≤ ‡¶¨‡¶æ ‡¶Æ‡ßá‡ßü‡¶æ‡¶¶‡ßã‡¶§‡ßç‡¶§‡ßÄ‡¶∞‡ßç‡¶£ ‡¶π‡¶≤‡ßá)",
                "‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶™‡¶®‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ö‡¶Æ‡¶ø‡¶≤ (‡¶™‡¶£‡ßç‡¶Ø‡ßá‡¶∞ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£ ‡¶¨‡¶æ ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨‡ßá‡¶∞ ‡¶Ö‡¶Æ‡¶ø‡¶≤ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá)",
            ],
            timelineTitle: "‚è≥ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü‡¶∏‡ßÄ‡¶Æ‡¶æ",
            timelineText: "‡¶™‡¶£‡ßç‡¶Ø ‡¶ó‡ßç‡¶∞‡¶π‡¶£‡ßá‡¶∞ ‡ß≠ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶ü‡¶ø‡¶Æ‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§ ‡ß≠ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ‡•§",
            refundPolicyTitle: "üí∞ ‡¶∞‡¶ø‡¶´‡¶æ‡¶®‡ßç‡¶° ‡¶®‡ßÄ‡¶§‡¶ø‡¶Æ‡¶æ‡¶≤‡¶æ",
            refundPolicyIntro: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶™‡¶£‡ßç‡¶Ø ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á‡ßü‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∞‡¶ø‡¶´‡¶æ‡¶®‡ßç‡¶° ‡¶®‡ßÄ‡¶§‡¶ø‡¶Æ‡¶æ‡¶≤‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶∞‡¶ø‡¶´‡¶æ‡¶®‡ßç‡¶° ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶¨‡ßá‡•§",
            viewRefundPolicy: "‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶∞‡¶ø‡¶´‡¶æ‡¶®‡ßç‡¶° ‡¶™‡¶≤‡¶ø‡¶∏‡¶ø ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®",
            returnProcessTitle: "üöö ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶™‡ßç‡¶∞‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡¶æ",
            returnProcessSteps: [
                "‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßá ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶∞‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®‡•§",
                "‡¶™‡¶£‡ßç‡¶Ø‡¶ü‡¶ø ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶ì ‡¶Ü‡¶∏‡¶≤ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú‡¶ø‡¶Ç ‡¶∏‡¶π ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡¶ø‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
                "‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶ó‡ßç‡¶∞‡¶∏‡ßç‡¶§ ‡¶π‡ßü, ‡¶™‡ßç‡¶∞‡¶Æ‡¶æ‡¶£ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶õ‡¶¨‡¶ø/‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
            ],
            nonRefundableTitle: "‚ùå ‡¶Ø‡ßá‡¶∏‡¶¨ ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶™‡ßç‡¶∞‡¶Ø‡ßã‡¶ú‡ßç‡¶Ø ‡¶®‡ßü",
            nonRefundableCases: [
                "‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶¨‡¶æ ‡¶Ü‡¶Ç‡¶∂‡¶ø‡¶ï ‡¶ï‡ßç‡¶∑‡¶§‡¶ø‡¶ó‡ßç‡¶∞‡¶∏‡ßç‡¶§ ‡¶™‡¶£‡ßç‡¶Ø",
                "‡¶π‡¶æ‡¶á‡¶ú‡¶ø‡¶® ‡¶¨‡¶æ ‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤ ‡¶ï‡ßá‡ßü‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü (‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ ‡¶§‡¶æ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶π‡ßü)",
                "‡¶°‡¶ø‡¶∏‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶¨‡¶æ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶Ö‡¶´‡¶æ‡¶∞‡ßá ‡¶ï‡ßá‡¶®‡¶æ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶™‡¶£‡ßç‡¶Ø (‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶â‡¶≤‡ßç‡¶≤‡ßá‡¶ñ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá)",
            ],
            customerSupportTitle: "üìû ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü",
            customerSupportText: "‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶¨‡¶æ ‡¶∞‡¶ø‡¶´‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®:",
            whatsapp: "WhatsApp: 01990-457545",
            email: "‡¶á‡¶Æ‡ßá‡¶á‡¶≤: support@ponnokenakata.com",
        },
        en: {
            title: "Return Policy",
            refundableTitle: "‚úÖ Cases Where Product is Returnable",
            refundableCases: [
                "Damaged or defective product (broken/cracked/functional issues)",
                "Incomplete delivery (missing items or quantity)",
                "Wrong product delivered (wrong size, color, model, or expired)",
                "Mismatch with advertisement (discrepancy with product description or images)",
            ],
            timelineTitle: "‚è≥ Return Timeline",
            timelineText: "You must inform our customer service team within 7 days of receiving the product. No returns will be accepted after 7 days.",
            refundPolicyTitle: "üí∞ Refund Policy",
            refundPolicyIntro: "The refund process will begin after the returned product is verified, according to our refund policy.",
            viewRefundPolicy: "View Detailed Refund Policy",
            returnProcessTitle: "üöö Return Process",
            returnProcessSteps: [
                "Contact customer service to request a return.",
                "The product must be returned in its original, unaltered condition and packaging.",
                "If damaged during delivery, photos/videos must be sent as proof.",
            ],
            nonRefundableTitle: "‚ùå Cases Where Return is Not Applicable",
            nonRefundableCases: [
                "Used or partially damaged products",
                "Hygiene or personal care products (unless defective)",
                "Certain products bought on discount or special offers (will be mentioned at the time of order)",
            ],
            customerSupportTitle: "üìû Customer Support",
            customerSupportText: "For returns or refunds, please contact:",
            whatsapp: "WhatsApp: 01990-457545",
            email: "Email: support@ponnokenakata.com",
        },
    };

    const currentContent = content[language];

    return (
        <div className="flex flex-col min-h-screen bg-background">
            <Header />
            <main className="flex-1">
                <section className="py-12 lg:py-16 bg-primary/5">
                    <div className="container mx-auto px-4 text-center">
                        <h1 className="text-4xl font-bold font-headline text-foreground">‚Ü©Ô∏è {currentContent.title}</h1>
                    </div>
                </section>

                <section className="py-16 lg:py-24 bg-background">
                    <div className="container mx-auto px-4 space-y-8 max-w-4xl">

                        <Card>
                            <CardHeader>
                                <CardTitle className="flex items-center gap-3"><CheckCircle className="h-6 w-6 text-green-600" />{currentContent.refundableTitle}</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <ul className="space-y-2 text-muted-foreground list-disc list-inside">
                                    {currentContent.refundableCases.map((text, index) => <li key={index}>{text}</li>)}
                                </ul>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle className="flex items-center gap-3"><Clock className="h-6 w-6 text-blue-600" />{currentContent.timelineTitle}</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <p className="text-muted-foreground">{currentContent.timelineText}</p>
                            </CardContent>
                        </Card>
                        
                        <Card>
                            <CardHeader>
                                <CardTitle className="flex items-center gap-3"><CircleDollarSign className="h-6 w-6 text-yellow-600" />{currentContent.refundPolicyTitle}</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-3">
                                <p className="text-muted-foreground">{currentContent.refundPolicyIntro}</p>
                                <Link href="/refund-policy">
                                    <Button variant="outline">
                                        <LinkIcon className="mr-2 h-4 w-4" />
                                        {currentContent.viewRefundPolicy}
                                    </Button>
                                </Link>
                            </CardContent>
                        </Card>

                        <Card>
                            <CardHeader>
                                <CardTitle className="flex items-center gap-3"><Truck className="h-6 w-6 text-purple-600" />{currentContent.returnProcessTitle}</CardTitle>
                            </CardHeader>
                            <CardContent>
                                <ul className="space-y-2 text-muted-foreground list-decimal list-inside">
                                    {currentContent.returnProcessSteps.map((text, index) => <li key={index}>{text}</li>)}
                                </ul>
                            </CardContent>
                        </Card>
                        
                        <Card>
                            <CardHeader>
                                <CardTitle className="flex items-center gap-3"><XCircle className="h-6 w-6 text-red-600" />{currentContent.nonRefundableTitle}</CardTitle>
                            </CardHeader>
                            <CardContent>
                               <ul className="space-y-2 text-muted-foreground list-disc list-inside">
                                    {currentContent.nonRefundableCases.map((text, index) => <li key={index}>{text}</li>)}
                                </ul>
                            </CardContent>
                        </Card>
                        
                        <Card>
                            <CardHeader>
                                <CardTitle className="flex items-center gap-3"><LifeBuoy className="h-6 w-6 text-cyan-600" />{currentContent.customerSupportTitle}</CardTitle>
                            </CardHeader>
                            <CardContent className="space-y-2">
                                <p className="text-muted-foreground">{currentContent.customerSupportText}</p>
                                <p className="font-semibold">üì± {currentContent.whatsapp}</p>
                                <p className="font-semibold">‚úâÔ∏è {currentContent.email}</p>
                            </CardContent>
                        </Card>

                    </div>
                </section>
            </main>
            <Footer />
        </div>
    );
}
